prefix owl: <http://www.w3.org/2002/07/owl#>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :main(?ns ?prefix) {
    "<section>"
        "<h2>Axiomatization</h2>"
        "<section>"
            "<h3>Classes</h3>"
            st:call-template(:classes, ?ns, ?prefix)
        "</section>"
        "<section>"
            "<h3>Object Properties</h3>"
            st:call-template(:properties, ?ns, ?prefix, owl:ObjectProperty)
        "</section>"
        "<section>"
            "<h3>Datatype Properties</h3>"
            st:call-template(:properties, ?ns, ?prefix, owl:DatatypeProperty)
        "</section>"
    "</section>"
} where {}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :classes(?ns ?prefix) {
    "<section class=\"specterm\">"
        st:call-template(:term-header, ?c, ?prefix, owl:Class)
        "<table class=\"def\">"
            "<tbody>"
                st:call-template(:class-subclass, ?c, ?prefix)
                st:call-template(:class-domain-all, ?c, ?prefix)
                st:call-template(:class-range-all, ?c, ?prefix)
            "</tbody>"
        "</table>"
    "</section>"
} where {
    ?c a owl:Class ;
       rdfs:comment ?desc .
    filter (strstarts(str(?c), str(?ns)))
    bind (strafter(str(?c), "#") as ?label)
}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :class-subclass(?c ?prefix) {
    "<tr>"
        "<td>Sub-class of</td>"
        format {
            "<td>%s</td>"
            st:call-template(:term-link, ?sc, ?prefix)
        }
    "</tr>"
} where {
    ?c rdfs:subClassOf ?sc .
    ?sc a owl:Class .
}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix schema: <http://schema.org/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :class-domain-all(?c ?prefix) {
    "<tr>"
        "<td>In the domainÂ of</td>"
        "<td>" st:call-template(:class-domain, ?c, ?prefix) "</td>"
    "</tr>"
} where {
    filter exists {
        ?p schema:domainIncludes ?c .
    }
}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix schema: <http://schema.org/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :class-domain(?c ?prefix) {
    st:call-template(:term-link, ?p, ?prefix) ; separator = "<br>"
} where {
    ?p schema:domainIncludes ?c .
}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix schema: <http://schema.org/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :class-range-all(?c ?prefix) {
    "<tr>"
        "<td>In the range of</td>"
        "<td>" st:call-template(:class-range, ?c, ?prefix) "</td>"
    "</tr>"
} where {
    filter exists {
        ?p schema:rangeIncludes ?c .
    }
}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix schema: <http://schema.org/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :class-range(?c ?prefix) {
    st:call-template(:term-link, ?p, ?prefix) ; separator = "<br>"
} where {
    ?p schema:rangeIncludes ?c .
}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :properties(?ns ?prefix ?type) {
    "<section class=\"specterm\">"
        st:call-template(:term-header, ?p, ?prefix, ?type)
        "<table class=\"def\">"
            "<tbody>"
                st:call-template(:property-domain, ?p, ?prefix)
                st:call-template(:property-range, ?p, ?prefix)
            "</tbody>"
        "</table>"
    "</section>"
} where {
    ?p a ?type ;
       rdfs:comment ?desc .
    filter (strstarts(str(?p), str(?ns)))
    bind (strafter(str(?p), "#") as ?label)
}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix schema: <http://schema.org/>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :property-domain(?p ?prefix) {
    "<tr>"
        format { "<td>%s</td>" ?type }
        format {
            "<td>%s</td>"
            st:call-template(:term-link, ?dom, ?prefix)
        }
    "</tr>"
} where {
    {
        ?p rdfs:domain ?dom .
        bind ("Domain" as ?type)
    }
    union
    {
        ?p schema:domainIncludes ?dom .
        bind ("Domain includes" as ?type)
    }
    filter (isIRI(?dom)) # FIXME issue with owl:unionOf
}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix schema: <http://schema.org/>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :property-range(?p ?prefix) {
    "<tr>"
        format { "<td>%s</td>" ?type }
        format {
            "<td>%s</td>"
            st:call-template(:term-link, ?range, ?prefix)
        }
    "</tr>"
} where {
    {
        ?p rdfs:range ?range .
        bind ("Range" as ?type)
    }
    union
    {
        ?p schema:rangeIncludes ?range .
        bind ("Range includes" as ?type)
    }
    filter (isIRI(?range))
}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix st: <http://ns.inria.fr/sparql-template/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :term-header(?term ?prefix ?type) {
    format { "<h4>%s</h4>" ?label }
    format { "<p>IRI: <code>%s</code></p>" ?term }
    format { "<span>%s</span>" ?desc }
} where {
    ?term rdfs:comment ?desc
    optional { ?term rdfs:label ?l }
    bind (if(bound(?l), ?l, strafter(str(?term), "#")) as ?label)
}

---

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix schema: <http://schema.org/>
prefix vann: <http://purl.org/vocab/vann/>
prefix : <http://w3c.github.io/wot-thing-description/ontology#>
template :term-link(?term ?defaultPrefix) {
    format {
        "<code><a href=\"%s\">%s</a></code>"
        if(?prefix = ?defaultPrefix,
            concat("#", lcase(?label)),
            str(?term))
        if(?curie,
            # FIXME schema.org label not correctly extracted if in WHERE clause?
            concat(?prefix, ":", if(strstarts(str(?term), str(schema:)), strafter(str(?term), str(schema:)), ?label)),
            ?label)
    }
} where {
    optional { ?term rdfs:label ?l }
    bind (if(bound(?l), ?l, strafter(str(?term), "#")) as ?label)
    optional {
        ?o a owl:Ontology ;
            vann:preferredNamespacePrefix ?prefix .
        filter (strstarts(str(?term), str(?o)))
    }
    optional {
        bind ("schema" as ?prefix)
        filter (strstarts(str(?term), str(schema:)))
    }
    bind (bound(?prefix) as ?curie)
}