@prefix : <http://www.w3.org/ns/td-validation#> .
@prefix td: <https://www.w3.org/2019/wot/td#> .
@prefix jsonschema: <https://www.w3.org/2019/wot/json-schema#> .
@prefix wotsec: <https://www.w3.org/2019/wot/security#> .
@prefix hctl: <https://www.w3.org/2019/wot/hypermedia#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <http://schema.org> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

:ThingShape a sh:NodeShape ;
    sh:targetClass td:Thing ;
    skos:definition """<p>An abstraction of a physical or a virtual entity whose
          metadata and interfaces are described by a WoT Thing
          Description, whereas a virtual entity is the composition
          of one or more Things.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 1 ;
    sh:property [
        sh:path dcterms:title ;
        sh:minCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path dcterms:description ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path td:versionInfo ;
        sh:node :VersionInfoShape ;
        sh:order 5 ;
    ] ;
    sh:property [
        sh:path dcterms:created ;
        sh:datatype xsd:dateTime ;
        sh:maxCount 1 ;
        sh:order 6 ;
    ] ;
    sh:property [
        sh:path dcterms:modified ;
        sh:datatype xsd:dateTime ;
        sh:maxCount 1 ;
        sh:order 7 ;
    ] ;
    sh:property [
        sh:path td:supportContact ;
        sh:maxCount 1 ;
        sh:order 8 ;
    ] ;
    sh:property [
        sh:path [
            sh:alternativePath (
                td:hasPropertyAffordance
                td:hasActionAffordance
                td:hasEventAffordance
            )
        ] ;
        sh:node :InteractionAffordanceShape ;
        sh:minCount 1
    ] ;
    sh:property [
        sh:path td:hasPropertyAffordance ;
        sh:node :PropertyAffordanceShape ;
        sh:order 10 ;
    ] ;
    sh:property [
        sh:path td:hasActionAffordance ;
        sh:node :ActionAffordanceShape ;
        sh:order 11 ;
    ] ;
    sh:property [
        sh:path td:hasEventAffordance ;
        sh:node :EventAffordanceShape ;
        sh:order 12 ;
    ] ;
    sh:property [
        sh:path td:hasLink ;
        sh:node :LinkShape ;
        sh:order 13 ;
    ] ;
    sh:property [
        sh:path td:hasForm ;
        sh:node :FormShape ;
        sh:order 14 ;
    ] ;
    sh:property [
        sh:path td:hasSecurityConfiguration ;
        sh:minCount 1 ;
        sh:node :SecuritySchemeShape ;
        sh:order 15 ;
    ] .
    
:InteractionAffordanceShape a sh:NodeShape ;
    sh:targetClass td:InteractionAffordance ;
    skos:definition """<p>Metadata of a Thing that shows the possible choices to
          <a href="#dfn-consumer" class="internalDFN" data-link-type="dfn">Consumers</a>, thereby suggesting
          how <a href="#dfn-consumer" class="internalDFN" data-link-type="dfn">Consumers</a> may interact with the
          Thing. There are many types of potential affordances, but
          <abbr title="World Wide Web Consortium">W3C</abbr> WoT
          defines three types of Interaction Affordances:
          Properties, Actions, and Events.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 2 ;
    sh:property [
        sh:path dcterms:title ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path dcterms:description ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path td:hasForm ;
        sh:minCount 1 ;
        sh:node :FormShape ;
        sh:order 5 ;
    ] ;
    sh:property [
        sh:path td:hasUriTemplateSchema ;
        sh:node :DataSchemaShape ;
        sh:order 6 ;
    ] .

:PropertyAffordanceShape a sh:NodeShape ;
    sh:targetClass td:PropertyAffordance ;
    skos:definition """<p>An Interaction Affordance that exposes state of the
          Thing. This state can then be retrieved (read) and
          optionally updated (write). Things can also choose to
          make Properties observable by pushing the new state after
          a change.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 3 ;
    sh:property [
        sh:path td:isObservable ;
        sh:datatype xsd:boolean ;
        sh:maxCount 1 ;
    ] .
    
:ActionAffordanceShape a sh:NodeShape ;
    sh:targetClass td:ActionAffordance ;
    skos:definition """<p>An Interaction Affordance that allows to invoke a
          function of the Thing, which manipulates state (e.g.,
          toggling a lamp on or off) or triggers a process on the
          Thing (e.g., dim a lamp over time).</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 4 ;
    sh:property [
        sh:path td:hasInputSchema ;
        sh:node :DataSchemaShape ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path td:hasOutputSchema ;
        sh:node :DataSchemaShape ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path td:isSafe ;
        sh:datatype xsd:boolean ;
        sh:defaultValue false ;
        sh:maxCount 1 ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path td:isIdempotent ;
        sh:datatype xsd:boolean ;
        sh:defaultValue false ;
        sh:maxCount 1 ;
        sh:order 4 ;
    ] .
    
:EventAffordanceShape a sh:NodeShape ;
    sh:targetClass td:EventAffordance ;
    skos:definition """<p>An Interaction Affordance that describes an event
          source, which asynchronously pushes event data to
          <a href="#dfn-consumer" class="internalDFN" data-link-type="dfn">Consumers</a> (e.g., overheating
          alerts).</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 5 ;
    sh:property [
        sh:path td:hasSubscriptionSchema ;
        sh:node :DataSchemaShape ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path td:hasNotificationSchema ;
        sh:node :DataSchemaShape ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path td:hasCancellationSchema ;
        sh:node :DataSchemaShape ;
        sh:maxCount 1 ;
        sh:order 3 ;
    ] .

:VersionInfoShape a sh:NodeShape ;
    sh:targetClass td:VersionInfo ;
    skos:definition """<p>Metadata of a Thing that provides version information
          about the TD document. If required, additional version
          information such as firmware and hardware version (term
          definitions outside of the TD namespace) can be extended
          via the <a href="#dfn-context-ext" class="internalDFN" data-link-type="dfn">TD Context Extension</a>
          mechanism.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 8 ;
    sh:property [
        sh:path td:instance ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

:FormShape a sh:NodeShape ;
    sh:targetClass hctl:Form ;
    skos:definition """<p>A form can be viewed as a statement of "To perform an
          <b><em>operation type</em></b> operation on <b><em>form
          context</em></b>, make a <b><em>request method</em></b>
          request to <b><em>submission target</em></b>" where the
          optional <b><em>form fields</em></b> may further describe
          the required request. In Thing Descriptions, the
          <b><em>form context</em></b> is the surrounding Object,
          such as Properties, Actions, and Events or the Thing
          itself for meta-interactions.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 7 ;
    sh:property [
        sh:path hctl:hasTarget ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path hctl:forContentType ;
        sh:datatype xsd:string ;
        sh:defaultValue "application/json"^^xsd:string ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path hctl:forContentCoding ;
        sh:datatype xsd:string ;
        sh:order 4 ;
    ] ;
    sh:property [
        sh:path hctl:returns ;
        sh:node :ExpectedResponseShape ;
        sh:order 8 ;
    ] ;
    sh:property [
        sh:path hctl:hasOperationType ;
        sh:in (
            td:readProperty
            td:writeProperty
            td:observeProperty
            td:unobserveProperty
            td:invokeAction
            td:subscribeEvent
            td:unsubscribeEvent
            td:readAllProperties
            td:writeAllProperties
            td:readMultipleProperties
            td:writeMultipleProperties
        );
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path hctl:forSubProtocol ;
        sh:maxCount 1 ;
        skos:example (
            "longpoll"
            "websub"
            "sse"
        ) ;
        sh:order 5 ;
    ] ;
    sh:property [
        sh:path td:hasSecurityConfiguration ;
        sh:node :SecuritySchemeShape ;
        sh:order 6 ;
    ] ;
    sh:property [
        sh:path wotsec:scopes ;
        sh:datatype xsd:string ;
        sh:order 7 ;
    ] .
    
:LinkShape a sh:NodeShape ;
    sh:targetClass hctl:Link ;
    skos:definition """<p>A link can be viewed as a statement of the form
          "<b><em>link context</em></b> has a <b><em>relation
          type</em></b> resource at <b><em>link target</em></b>",
          where the optional <b><em>target attributes</em></b> may
          further describe the resource.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 6 ;
    sh:property [
        sh:path hctl:hasTarget ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path hctl:hintsAtMediaType ;
        sh:datatype xsd:string ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path hctl:hasRelationType ;
        sh:nodeKind sh:IRI ; # TODO could be relaxed
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path hctl:hasAnchor ;
        sh:node sh:IRI ;
        sh:maxCount 1 ;
        sh:order 4 ;
    ] .

:ExpectedResponseShape a sh:NodeShape ;
    sh:targetClass hctl:ExpectedResponse ;
    skos:definition """<p>Communication metadata describing the expected
          response message.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 9 ;
     sh:property [
        sh:path hctl:forContentType ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .

:SecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:SecurityScheme ;
    skos:definition """<p>Metadata describing the configuration of a security
          mechanism. <span class="rfc2119-assertion" id="td-security-scheme-name">The value assigned to the name
          <code>scheme</code> <em class="rfc2119" title="MUST">MUST</em> be defined within a <a href="#dfn-vocab" class="internalDFN" data-link-type="dfn">Vocabulary</a>
          included in the <a href="#dfn-thing-description" class="internalDFN" data-link-type="dfn">Thing Description</a>,
          either in the standard <a href="#dfn-vocab" class="internalDFN" data-link-type="dfn">Vocabulary</a> defined
          in <a href="#sec-vocabulary-definition" class="sec-ref">§&nbsp;<bdi class="secno">5.</bdi> TD
          Information Model</a> or in a <a href="#dfn-context-ext" class="internalDFN" data-link-type="dfn">TD Context
          Extension</a>.</span></p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 1 ;
    sh:property [
        sh:path rdf:type ;
        # FIXME declare securityDefinitions as @included
        # sh:minCount 1 ;
        sh:in (
            wotsec:NoSecurityScheme
            wotsec:BasicSecurityScheme
            wotsec:CertSecurityScheme
            wotsec:DigestSecurityScheme
            wotsec:BearerSecurityScheme
            wotsec:PoPSecurityScheme
            wotsec:PSKSecurityScheme
            wotsec:PublicSecurityScheme
            wotsec:OAuth2SecurityScheme
            wotsec:APIKeySecurityScheme
        );
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path dcterms:description ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path wotsec:proxy ;
        sh:nodeKind sh:IRI ;
        sh:maxCount 1 ;
        sh:order 4 ;
    ] .

:NoSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:NoSecurityScheme ;
    skos:definition """<p>A security configuration corresponding to identified
          by the <a href="#dfn-vocab-term" class="internalDFN" data-link-type="dfn">Vocabulary Term</a>
          <code>nosec</code> (i.e., <code>"scheme":
          "nosec"</code>), indicating there is no authentication or
          other mechanism required to access the resource.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 2 .

:BasicSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:BasicSecurityScheme ;
    skos:definition """<p>Basic Authentication [<cite><a class="bibref" data-link-type="biblio" href="#bib-rfc7617" title="The 'Basic' HTTP Authentication Scheme">RFC7617</a></cite>]
          security configuration identified by the <a href="#dfn-vocab-term" class="internalDFN" data-link-type="dfn">Vocabulary Term</a> <code>basic</code> (i.e.,
          <code>"scheme": "basic"</code>), using an unencrypted
          username and password. This scheme should be used with
          some other security mechanism providing confidentiality,
          for example, TLS.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 3 ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "header"
          "query"
          "body"
          "cookie"
        );
        sh:defaultValue "header"^^xsd:string ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] .

:DigestSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:DigestSecurityScheme ;
    skos:definition """<p>Digest Access Authentication [<cite><a class="bibref" data-link-type="biblio" href="#bib-rfc7616" title="HTTP Digest Access Authentication">RFC7616</a></cite>]
          security configuration identified by the <a href="#dfn-vocab-term" class="internalDFN" data-link-type="dfn">Vocabulary Term</a> <code>digest</code> (i.e.,
          <code>"scheme": "digest"</code>). This scheme is similar
          to basic authentication but with added features to avoid
          man-in-the-middle attacks.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 4 ;
    sh:property [
        sh:path wotsec:qop ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "auth"
          "auth-int"
        );
        sh:defaultValue "auth"^^xsd:string ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "header"
          "query"
          "body"
          "cookie"
        );
        sh:defaultValue "header"^^xsd:string ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 3 ;
    ] .

:APIKeySecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:APIKeySecurityScheme ;
    skos:definition """<p>API key authentication security configuration
          identified by the <a href="#dfn-vocab-term" class="internalDFN" data-link-type="dfn">Vocabulary Term</a>
          <code>apikey</code> (i.e., <code>"scheme":
          "apikey"</code>). This is for the case where the access
          token is opaque and is not using a standard token
          format.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 5 ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "header"
          "query"
          "body"
          "cookie"
        );
        sh:defaultValue "query"^^xsd:string ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] .

:BearerSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:BearerSecurityScheme ;
    skos:definition """<p>Bearer Token [<cite><a class="bibref" data-link-type="biblio" href="#bib-rfc6750" title="The OAuth 2.0 Authorization Framework: Bearer Token Usage">RFC6750</a></cite>]
          security configuration identified by the <a href="#dfn-vocab-term" class="internalDFN" data-link-type="dfn">Vocabulary Term</a> <code>bearer</code> (i.e.,
          <code>"scheme": "bearer"</code>) for situations where
          bearer tokens are used independently of OAuth2. If the
          <code>oauth2</code> scheme is specified it is not
          generally necessary to specify this scheme as well as it
          is implied. For <code>format</code>, the value
          <code>jwt</code> indicates conformance with
          [<cite><a class="bibref" data-link-type="biblio" href="#bib-rfc7519" title="JSON Web Token (JWT)">RFC7519</a></cite>],
          <code>jws</code> indicates conformance with
          [<cite><a class="bibref" data-link-type="biblio" href="#bib-rfc7797" title="JSON Web Signature (JWS) Unencoded Payload Option">RFC7797</a></cite>],
          <code>cwt</code> indicates conformance with
          [<cite><a class="bibref" data-link-type="biblio" href="#bib-rfc8392" title="CBOR Web Token (CWT)">RFC8392</a></cite>], and
          <code>jwe</code> indicates conformance with
          [<cite><a class="bibref" data-link-type="biblio" href="#bib-rfc7516" title="JSON Web Encryption (JWE)">RFC7516</a></cite>], with
          values for <code>alg</code> interpreted consistently with
          those standards. <span class="rfc2119-assertion" id="td-security-bearer-format-extensions">Other formats and
          algorithms for bearer tokens <em class="rfc2119" title="MAY">MAY</em> be specified in vocabulary
          extensions</span>.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 6 ;
    sh:property [
        sh:path wotsec:authorization ;
        sh:datatype xsd:anyURI ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:alg ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        skos:example (
          "MD5" 
          "ES256"
          "ES512-256"
        );
        sh:defaultValue "ES256"^^xsd:string ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path wotsec:format ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        skos:example (
          "jwt" 
          "cwt" 
          "jwe"
          "jws"
        );
        sh:defaultValue "jwt"^^xsd:string ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "header"
          "query"
          "body"
          "cookie"
        );
        sh:defaultValue "header"^^xsd:string ;
        sh:order 4 ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 5 ;
    ] .

:CertSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:CertSecurityScheme ;
    skos:definition """<p>TODO</p>"""^^rdf:HTML ;
    skos:editorialNote "at risk" ;
    sh:closed false ;
    sh:order 7 ;
    sh:property [
        sh:path wotsec:identity ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
    ] .

:PSKSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:PSKSecurityScheme ;
    skos:definition """<p>Pre-shared key authentication security configuration
          identified by the <a href="#dfn-vocab-term" class="internalDFN" data-link-type="dfn">Vocabulary Term</a>
          <code>psk</code> (i.e., <code>"scheme":
          "psk"</code>).</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 8 ;
    sh:property [
        sh:path wotsec:identity ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
    ] .

:PublicSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:PublicSecurityScheme ;
    skos:definition """<p>TODO</p>"""^^rdf:HTML ;
    skos:editorialNote "at risk" ;
    sh:closed false ;
    sh:order 9 ;
    sh:property [
        sh:path wotsec:identity ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
    ] .

:PoPSecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:PoPSecurityScheme ;
    skos:definition """<p>TODO</p>"""^^rdf:HTML ;
    skos:editorialNote "at risk" ;
    sh:closed false ;
    sh:order 10 ;
    sh:property [
        sh:path wotsec:authorization ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:alg ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        skos:example (
          "MD5" 
          "ES256"
          "ES512-256"
        );
        sh:defaultValue "ES256"^^xsd:string ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path wotsec:format ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        skos:example (
          "jwt" 
          "cwt" 
          "jwe"
          "jws"
        );
        sh:defaultValue "jwt"^^xsd:string ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path wotsec:in ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:in (
          "header"
          "query"
          "body"
          "cookie"
        );
        sh:defaultValue "header"^^xsd:string ;
        sh:order 4 ;
    ] ;
    sh:property [
        sh:path wotsec:name ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 5 ;
    ] .

:OAuth2SecuritySchemeShape a sh:NodeShape ;
    sh:targetClass wotsec:OAuth2SecurityScheme ;
    skos:definition """<p>OAuth2 authentication security configuration for
          systems conformant with [<cite><a class="bibref" data-link-type="biblio" href="#bib-rfc6749" title="The OAuth 2.0 Authorization Framework">RFC6749</a></cite>]
          and [<cite><a class="bibref" data-link-type="biblio" href="#bib-rfc8252" title="OAuth 2.0 for Native Apps">RFC8252</a></cite>],
          identified by the <a href="#dfn-vocab-term" class="internalDFN" data-link-type="dfn">Vocabulary Term</a>
          <code>oauth2</code> (i.e., <code>"scheme":
          "oauth2"</code>). <span class="rfc2119-assertion" id="td-security-oauth2-code-flow">For the <code>code</code>
          flow both <code>authorization</code> and
          <code>token</code> <em class="rfc2119" title="MUST">MUST</em> be included.</span> If no
          <code>scopes</code> are defined in the
          <code>SecurityScheme</code> then they are considered to
          be empty.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 11 ;
    sh:property [
        sh:path wotsec:authorization ;
        sh:nodeKind sh:IRI ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path wotsec:token ;
        sh:nodeKind sh:IRI ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path wotsec:refresh ;
        sh:nodeKind sh:IRI ;
        sh:maxCount 1 ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path wotsec:scopes ;
        sh:datatype xsd:string ;
        sh:order 4 ;
    ] ;
    sh:property [
        sh:path wotsec:flow ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        skos:example (
#            "implicit" 
#            "password" 
#            "client" 
            "code"
        );
        sh:minCount 1 ;
        sh:order 5 ;
    ] .
    
:DataSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:DataSchema ;
    skos:definition """<p>Metadata that describes the data format used. It can
          be used for validation.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 1 ;
    sh:property [
        sh:path dcterms:title ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path dcterms:description ;
        sh:order 3 ;
    ] ;
    sh:property [
        sh:path jsonschema:const ;
        sh:maxCount 1 ;
        sh:order 6 ;
    ] ;
    sh:property [
        sh:path schema:unitCode ;
        sh:order 6 ;
    ] ;
    sh:property [
        sh:path jsonschema:oneOf ;
        sh:node :DataSchemaShape ;
        sh:order 8 ;
    ] ;
    sh:property [
        sh:path jsonschema:enum ;
        sh:order 9 ;
    ] ;
    sh:property [
        sh:path jsonschema:readOnly ;
        sh:datatype xsd:boolean ;
        sh:defaultValue false ;
        sh:maxCount 1 ;
        sh:order 10 ;
    ] ;
    sh:property [
        sh:path jsonschema:writeOnly ;
        sh:datatype xsd:boolean ;
        sh:defaultValue false ;
        sh:maxCount 1 ;
        sh:order 11 ;
    ] ;
    sh:property [
        sh:path jsonschema:format ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
        sh:order 12 ;
    ] .

:ArraySchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:ArraySchema ;
    skos:definition """<p>Metadata describing data of type <a href="#dfn-array" class="internalDFN" data-link-type="dfn">Array</a>. This
          <a href="#dfn-subclass" class="internalDFN" data-link-type="dfn">Subclass</a> is indicated by the
          value <code>array</code> assigned to <code>type</code> in
          <code>DataSchema</code> instances.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 2 ;
    sh:property [
        sh:path jsonschema:items ;
        sh:node :DataSchemaShape ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path jsonschema:minItems ;
        sh:datatype xsd:unsignedInt ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] ;
    sh:property [
        sh:path jsonschema:maxItems ;
        sh:datatype xsd:unsignedInt ;
        sh:maxCount 1 ;
        sh:order 3 ;
    ] .
    
:BooleanSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:BooleanSchema ;
    skos:definition """<p>Metadata describing data of type <code>boolean</code>.
          This <a href="#dfn-subclass" class="internalDFN" data-link-type="dfn">Subclass</a> is indicated by the
          value <code>boolean</code> assigned to <code>type</code>
          in <code>DataSchema</code> instances.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 3 .
    
:NumberSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:NumberSchema ;
    skos:definition """<p>Metadata describing data of type <code>number</code>.
          This <a href="#dfn-subclass" class="internalDFN" data-link-type="dfn">Subclass</a> is indicated by the
          value <code>number</code> assigned to <code>type</code>
          in <code>DataSchema</code> instances.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 4 ;
    sh:property [
        sh:path jsonschema:minimum ;
        sh:or (
            [ sh:datatype xsd:double ]
            [ sh:datatype xsd:integer ] # due to JSON-LD type coercion
        ) ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path jsonschema:maximum ;
        sh:or (
            [ sh:datatype xsd:double ]
            [ sh:datatype xsd:integer ] # due to JSON-LD type coercion
        ) ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] .
    
:IntegerSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:IntegerSchema ;
    skos:definition """<p>Metadata describing data of type <code>integer</code>.
          This <a href="#dfn-subclass" class="internalDFN" data-link-type="dfn">Subclass</a> is indicated by the
          value <code>integer</code> assigned to <code>type</code>
          in <code>DataSchema</code> instances.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 5 ;
    sh:property [
        sh:path jsonschema:minimum ;
        sh:datatype xsd:integer ;
        sh:maxCount 1 ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path jsonschema:maximum ;
        sh:datatype xsd:integer ;
        sh:maxCount 1 ;
        sh:order 2 ;
    ] .
    
:ObjectSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:ObjectSchema ;
    skos:definition """<p>Metadata describing data of type <code>object</code>.
          This <a href="#dfn-subclass" class="internalDFN" data-link-type="dfn">Subclass</a> is indicated by the
          value <code>object</code> assigned to <code>type</code>
          in <code>DataSchema</code> instances.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 6 ;
    sh:property [
        sh:path jsonschema:properties ;
        sh:node :DataSchemaShape ;
        sh:order 1 ;
    ] ;
    sh:property [
        sh:path jsonschema:required ;
        sh:datatype xsd:string ;
        sh:order 2 ;
    ] .

:StringSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:StringSchema ;
    skos:definition """<p>Metadata describing data of type <code>string</code>.
          This <a href="#dfn-subclass" class="internalDFN" data-link-type="dfn">Subclass</a> is indicated by the
          value <code>string</code> assigned to <code>type</code>
          in <code>DataSchema</code> instances.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 7 .

:NullSchemaShape a sh:NodeShape ;
    sh:targetClass jsonschema:NullSchema ;
    skos:definition """<p>Metadata describing data of type <code>null</code>.
          This <a href="#dfn-subclass" class="internalDFN" data-link-type="dfn">Subclass</a> is indicated by the
          value <code>null</code> assigned to <code>type</code> in
          <code>DataSchema</code> instances. This Subclass
          describes only one acceptable value, namely
          <code>null</code>. It can be used as part of a
          <code>oneOf</code> declaration, where it is used to
          indicate, that the data can also be
          <code>null</code>.</p>"""^^rdf:HTML ;
    sh:closed false ;
    sh:order 8 .
